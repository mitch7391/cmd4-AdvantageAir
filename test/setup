#!/usr/bin/env bash

_common_setup()
{
   # This setup script would be called from the git home directory
   load 'node_modules/bats-support/load.bash'
   load 'node_modules/bats-assert/load.bash'
   # get the containing directory of this file
   # use $BATS_TEST_FILENAME instead of ${BASH_SOURCE[0]} or $0,
   # as those will point to the bats executable's location or the preprocessed file respectively
   PROJECT_ROOT="$( cd "$( dirname "$BATS_TEST_FILENAME" )/.." >/dev/null 2>&1 && pwd )"
   # make executables in src/ visible to PATH
   PATH="$PROJECT_ROOT/src:$PATH"

   cd "$PROJECT_ROOT/test"

   # Remove previous symbolic link tests.
   # Note:  This is called even if skip is used.
   if [ -L "./data" ]; then
      rm ./data
   fi

}

_common_teardown()
{
   # Remove final symbolic link so its not left around.
   if [ -L "./data" ]; then
      rm ./data
   fi
}

_common_beforeEach()
{
   # Constants can change with different data
   MY_AIR_CONSTANTS_FILE="/tmp/myAirConstants.txt_TEST"
   if [ -f "${MY_AIR_CONSTANTS_FILE}" ]; then
      rm "${MY_AIR_CONSTANTS_FILE}"
   fi
}

_common_compareAgainstZones()
{
   local io=$1
   local device=$2
   local characteristic=$3
   local zones=$4
   local testOnOff=$5

   # Bats "run" gobbles up all the stdout. Remove for debugging
   run ./compare/zones.txt $io $device $characteristic $zones $testOnOff
   z_status=$status
   z_lines=("${lines[@]}")
   run ./compare/AdvAir.sh  $io $device $characteristic $zones $testOnOff
   assert_equal "$status" "$z_status" ]
   assert_equal "${lines[0]}" "${z_lines[0]}"
   assert_equal "${lines[1]}" "${z_lines[1]}"
   assert_equal "${lines[2]}" "${z_lines[2]}"
   assert_equal "${lines[3]}" "${z_lines[3]}"
   assert_equal "${lines[4]}" "${z_lines[4]}"
   assert_equal "${lines[5]}" "${z_lines[5]}"

}

_common_compareAgainstEzone()
{
   local io=$1
   local device=$2
   local characteristic=$3
   local testOnOff=$4

   # Bats "run" gobbles up all the stdout. Remove for debugging
   run ./compare/ezone.txt $io $device $characteristic $testOnOff
   e_status=$status
   e_lines=("${lines[@]}")
   run ./compare/AdvAir.sh $io $device $characteristic $zones $testOnOff
   assert_equal "$status" "$e_status" ]
   assert_equal "${lines[0]}" "${e_lines[0]}"
   assert_equal "${lines[1]}" "${e_lines[1]}"
   assert_equal "${lines[2]}" "${e_lines[2]}"
   assert_equal "${lines[3]}" "${e_lines[3]}"
   assert_equal "${lines[4]}" "${e_lines[4]}"
   assert_equal "${lines[5]}" "${e_lines[5]}"
}
